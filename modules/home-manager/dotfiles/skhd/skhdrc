# Adapted from https://gist.githubusercontent.com/TomFaulkner/5531bde4f2955c08bcd07d6e308f6d59
#
# Remapped to work better on a Dvorak keyboard.

# open terminal
# cmd + ctrl - t : /Applications/Kitty.app/Contents/MacOS/kitty --single-instance -d ~
cmd + ctrl - t : /Applications/iterm2.app
shift + cmd + ctrl - e : "/User/pron/Applications/Nix Apps/Emacs.app/Contents/MacOS/Emacs --with-profile default"
shift + cmd + ctrl - d : "/User/pron/Applications/Nix Apps/Emacs.app/Contents/MacOS/Emacs --with-profile doom"

# focus window
alt - h : yabai -m window --focus west
alt - t : yabai -m window --focus south
alt - n : yabai -m window --focus north
alt - s : yabai -m window --focus east

# swap window
shift + alt - h : yabai -m window --swap west
shift + alt - t : yabai -m window --swap south
shift + alt - n : yabai -m window --swap north
shift + alt - s : yabai -m window --swap east

# move window
shift + cmd - h : yabai -m window --warp west
shift + cmd - t : yabai -m window --warp south
shift + cmd - n : yabai -m window --warp north
shift + cmd - s : yabai -m window --warp east

# balance size of windows
shift + alt - 0 : yabai -m space --balance

# make floating window fill screen
alt - up     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
alt - left   : yabai -m window --grid 1:2:0:0:1:1

# make floating window fill right-half of screen
alt - right  : yabai -m window --grid 1:2:1:0:1:1

### create desktop, move window and follow focus - uses jq for parsing json (brew install jq) -- REQUIRES SIP
# shift + cmd - d : yabai -m space --create && \
#                   index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#                   yabai -m window --space "${index}" && \
#                   yabai -m space --focus "${index}"

### create desktop and follow focus - uses jq for parsing json (brew install jq) -- REQUIRES SIP
# cmd + alt - d : yabai -m space --create && \
#                 index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#                 yabai -m space --focus "${index}"

### destroy (kill) desktop -- REQUIRES SIP
# cmd + alt - k : yabai -m space --destroy

### fast focus desktop -- REQUIRES SIP
# cmd + alt - w : yabai -m space --focus recent
# cmd + alt - m : yabai -m space --focus prev
# cmd + alt - v : yabai -m space --focus next
# cmd + alt - 1 : yabai -m space --focus 1
# cmd + alt - 2 : yabai -m space --focus 2
# cmd + alt - 3 : yabai -m space --focus 3
# cmd + alt - 4 : yabai -m space --focus 4
# cmd + alt - 5 : yabai -m space --focus 5
# cmd + alt - 6 : yabai -m space --focus 6
# cmd + alt - 7 : yabai -m space --focus 7
# cmd + alt - 8 : yabai -m space --focus 8
# cmd + alt - 9 : yabai -m space --focus 9
# cmd + alt - 0 : yabai -m space --focus 10

### send window to desktop and follow focus -- REQUIRES SIP
# shift + cmd - w : yabai -m window --space recent; yabai -m space --focus recent
# shift + cmd - m : yabai -m window --space prev; yabai -m space --focus prev
# shift + cmd - v : yabai -m window --space next; yabai -m space --focus next
# shift + cmd - 1 : yabai -m window --space  1; yabai -m space --focus 1
# shift + cmd - 2 : yabai -m window --space  2; yabai -m space --focus 2
# shift + cmd - 3 : yabai -m window --space  3; yabai -m space --focus 3
# shift + cmd - 4 : yabai -m window --space  4; yabai -m space --focus 4
# shift + cmd - 5 : yabai -m window --space  5; yabai -m space --focus 5
# shift + cmd - 6 : yabai -m window --space  6; yabai -m space --focus 6
# shift + cmd - 7 : yabai -m window --space  7; yabai -m space --focus 7
# shift + cmd - 8 : yabai -m window --space  8; yabai -m space --focus 8
# shift + cmd - 9 : yabai -m window --space  9; yabai -m space --focus 9
# shift + cmd - 0 : yabai -m window --space 10; yabai -m space --focus 10

# focus monitor
ctrl + alt - w  : yabai -m display --focus recent
ctrl + alt - m  : yabai -m display --focus prev
ctrl + alt - v  : yabai -m display --focus next
ctrl + alt - 1  : yabai -m display --focus 1
ctrl + alt - 2  : yabai -m display --focus 2
ctrl + alt - 3  : yabai -m display --focus 3

# send window to monitor and follow focus
ctrl + cmd - w  : yabai -m window --display recent; yabai -m display --focus recent
ctrl + cmd - m  : yabai -m window --display prev; yabai -m display --focus prev
ctrl + cmd - v  : yabai -m window --display next; yabai -m display --focus next
ctrl + cmd - 1  : yabai -m window --display 1; yabai -m display --focus 1
ctrl + cmd - 2  : yabai -m window --display 2; yabai -m display --focus 2
ctrl + cmd - 3  : yabai -m window --display 3; yabai -m display --focus 3

# move window
shift + ctrl - left  : yabai -m window --move rel:-20:0
shift + ctrl - down  : yabai -m window --move rel:0:20
shift + ctrl - up    : yabai -m window --move rel:0:-20
shift + ctrl - right : yabai -m window --move rel:20:0

# I found the using shift + alt arrows for pushing out and shift + cmd
# for pulling in the 4 window edges confusing.  If I shift + alt -
# right'd to enlarge the current window, my fingers expected shift +
# alt - left to reverse this.  There for I have changed the mapping so
# that it does precisely that.  The side effect is that shift + cmd
# are used to do the same to the top and left edges of the window.

# Resize the window at the bottom or right edge.
shift + alt - up    : yabai -m window --resize bottom:0:-20
shift + alt - down  : yabai -m window --resize bottom:0:20
shift + alt - left  : yabai -m window --resize right:-20:0
shift + alt - right : yabai -m window --resize right:20:0

# Resize the window at the top or left edge.
shift + cmd - down  : yabai -m window --resize top:0:20
shift + cmd - up    : yabai -m window --resize top:0:-20
shift + cmd - left  : yabai -m window --resize left:-20:0
shift + cmd - right : yabai -m window --resize left:20:0

# set insertion point in focused container
ctrl + alt - h : yabai -m window --insert west
ctrl + alt - t : yabai -m window --insert south
ctrl + alt - n : yabai -m window --insert north
ctrl + alt - s : yabai -m window --insert east

# rotate tree
alt - r         : yabai -m space --rotate 90
shift + alt - r : yabai -m space --rotate 270

# mirror tree y-axis
alt - y : yabai -m space --mirror y-axis

# mirror tree x-axis
alt - x : yabai -m space --mirror x-axis

# toggle desktop offset
alt - a : yabai -m space --toggle padding; yabai -m space --toggle gap

# toggle window parent zoom
alt - d : yabai -m window --toggle zoom-parent

# toggle window fullscreen zoom
alt - f : yabai -m window --toggle zoom-fullscreen

# toggle window native fullscreen
shift + alt - f : yabai -m window --toggle native-fullscreen

# toggle window border
shift + alt - b : yabai -m window --toggle border

# toggle window split type
alt - e : yabai -m window --toggle split

# float / unfloat window and center on screen
alt - c : yabai -m window --toggle float;\
          yabai -m window --grid 4:4:1:1:2:2

### toggle sticky (show on all spaces) (g as in glued to the display) -- REQUIRES SIP
# alt - g : yabai -m window --toggle sticky -- REQUIRES SIP

### toggle topmost (keep above other windows) -- REQUIRES SIP
# alt - o : yabai -m window --toggle topmost

# toggle sticky, topmost and resize to picture-in-picture size
alt - p : yabai -m window --toggle sticky;\
          yabai -m window --toggle topmost;\
          yabai -m window --grid 5:5:4:0:1:1

# change layout of desktop
ctrl + alt - a : yabai -m space --layout bsp
ctrl + alt - d : yabai -m space --layout float

# Local Variables:
# mode: conf-colon
# End:
